
<project name="ant-scac" default="scac">

      <property environment="env"/>

      <!-- any of these can be overwritten by setting -D<prop>=value, otherwise these are the defaults -->
      <property name="oracle.home" location="${basedir}/.."/>

      <import file="ant-soa-common.xml"/>

      <!-- scac.arguments -->
      <property name="scac.displayLevel" value="1"/>
      <property name="scac.overwrite"    value="true"/>
      <property name="scac.error"  location="${java.io.tmpdir}/out.err"/>
      <property name="scac.input"  location="${env.PWD}/composite.xml"/>
      <property name="scac.output" location="${java.io.tmpdir}/out.xml"/>
      <!-- -->
      <property name="oracle.home" location="${basedir}/.."/>
      <property name="java.passed.home" location="${env.JAVA_HOME}"/>

      <!-- if fmw.home is not provided use the default -->
      <property name="fmw.home" value="${oracle.home}/.."/>
      <property name="was.home" value="${fmw.home}/websphere"/>

      <!-- DB2 JCC driver's location from environment -->
      <property name="db2.jcc.driver.path" location="${env.DB2_JCC_DRIVER_PATH}"/>
      <!-- Check whether DB2 JCC driver exist in default location -->
      <condition property="default.jcc.driver.present">
         <available file="${oracle.home}/../jccDriver" type="dir"/>
      </condition>

      <!-- if wl_home is not provided use the default -->
      <property name="wl_home" value="${oracle.home}/../wlserver_10.3"/>
    

      <condition property="is_ibm_jdk">
         <contains string="${java.vendor}" substring="ibm" casesensitive="false" />
      </condition>
      <condition property="is_ibm_jdk" value="false">
        <not> <isset property="is_ibm_jdk" /> </not>
      </condition>

      
      <!-- Derived config -->
      <property name="config.dir" value="${oracle.home}/integration/seed/soa/configuration/"/>


      <!-- jars needed to run scac ant task -->
      <path id="scac.tasks.class.path">
         <!-- project classpath -->
         <pathelement path="${scac.input}/../classes"/>
         <pathelement path="${scac.input}/../SCA-INF/classes"/>
	
	 <!-- 13494481-project library for command line ant build --> 
         <fileset erroronmissingdir="false" dir="${scac.input}/../SCA-INF/lib" >
	 	<include name="*.jar" /> 
         </fileset>

         <!-- Oracle BPM -->
         <fileset dir="${oracle.home}/soa/modules/">
            <include name="oracle.bpm.runtime_11.1.1/*.jar"/>
            <include name="oracle.bpm.project_11.1.1/oracle.bpm.project.catalog.jar"/>
            <include name="oracle.bpm.project_11.1.1/oracle.bpm.project.compile.jar"/>
            <include name="oracle.bpm.project_11.1.1/oracle.bpm.project.io.jar"/>
            <include name="oracle.bpm.project_11.1.1/oracle.bpm.project.jar"/>
            <include name="oracle.bpm.project_11.1.1/oracle.bpm.project.model.jar"/>
            <include name="oracle.bpm.project_11.1.1/oracle.bpm.soa.component-model.jar"/>
            <include name="oracle.bpm.client_11.1.1/oracle.bpm.bpm-services.interface.jar"/>
            <include name="oracle.bpm.client_11.1.1/oracle.bpm.web-resources.jar"/>
         </fileset>        

         <!-- tools jar -->
         <fileset dir="${oracle.home}/soa/modules/">
            <include name="oracle.soa.bpel_11.1.1/orabpel.jar"/>
            <include name="oracle.soa.bpel_11.1.1/orabpel-validator.jar"/>
            <include name="oracle.soa.bpel_11.1.1/orabpel-common.jar"/>
            <include name="oracle.soa.bpel_11.1.1/orabpel-thirdparty.jar"/>
            <include name="oracle.soa.fabric_11.1.1/fabric-pcl.jar"/>
            <include name="oracle.soa.fabric_11.1.1/fabric-runtime.jar"/>
            <include name="fabric-url-handler_11.1.1.jar"/>
            <include name="oracle.soa.fabric_11.1.1/soa-infra-tools.jar"/>
            <include name="oracle.soa.fabric_11.1.1/testfwk-xbeans.jar"/>
            <include name="oracle.soa.workflow_11.1.1/bpm-services.jar"/>
            <include name="oracle.soa.fabric_11.1.1/bpm-infra.jar"/>
            <include name="oracle.soa.mediator_11.1.1/mediator_client.jar"/>
         </fileset>

         <!-- Rules SDK2, and IBM JDK specific soa-ibm-addon ja -->
         <fileset dir="${oracle.home}/soa/modules">
            <include name="oracle.rules_11.1.1/migrator.jar"/>
            <include name="oracle.rules_11.1.1/rl.jar"/>
            <include name="oracle.rules_11.1.1/rulesdk2.jar"/>
            <include name="soa-ibm-addon.jar" if="is_ibm_jdk" />
         </fileset>
         <fileset dir="${oracle.soa.mgmt.home}">
            <include name="soa/modules/oracle.soa.mgmt_11.1.1/soa-infra-mgmt.jar"/>
         </fileset>
         <fileset dir="${common.components.home}/modules">
            <include name="commonj.sdo_2.1.0.jar"/>
            <include name="oracle.ucp_11.1.0.jar"/>
            <include name="org.springframework_2.5.jar"/>
            <include name="oracle.adf.model_11.1.1/adfbcsvc-share.jar"/>
            <include name="oracle.adf.model_11.1.1/adfm.jar"/>
            <include name="oracle.adf.share.ca_11.1.1/adf-share-base.jar"/>
            <include name="oracle.adf.share.ca_11.1.1/adf-share-ca.jar"/>
            <include name="oracle.adf.share_11.1.1/adf-share-base.jar"/>
            <include name="oracle.adf.share_11.1.1/adf-share-ca.jar"/>
            <include name="oracle.adf.share_11.1.1/adf-share-support.jar"/>
            <include name="oracle.adf.share_11.1.1/adflogginghandler.jar"/>
            <include name="oracle.adf.share_11.1.1/jsp-el-api.jar"/>
            <include name="oracle.bali.share_11.1.1/share.jar"/>
            <include name="oracle.classloader_11.1.1.jar"/>
            <include name="oracle.dms_11.1.1/dms.jar"/>
            <include name="oracle.fabriccommon_11.1.1/fabric-common.jar"/>
            <include name="oracle.http_client_11.1.1.jar"/>
            <include name="oracle.javacache_11.1.1/cache.jar"/>
            <include name="oracle.jmx_11.1.1/jmxframework.jar"/>
            <include name="oracle.jmx_11.1.1/jmxspi.jar"/>
            <include name="oracle.logging-utils_11.1.1.jar"/>
            <include name="oracle.mds_11.1.1/mdsrt.jar"/>
            <include name="oracle.mds_11.1.1/oramds.jar"/>
            <include name="oracle.webservices_11.1.1/orawsdl.jar"/>
            <include name="oracle.webservices_11.1.1/wsclient.jar"/>
            <include name="oracle.wsm.common_11.1.1/wsm-policy-core.jar"/>
            <include name="oracle.wsm.common_11.1.1/wsm-secpol.jar"/>
            <include name="oracle.nlsrtl_11.1.0/orai18n-mapping.jar"/> 
            <include name="oracle.xdk_11.1.0/xmlparserv2.jar"/>
            <include name="oracle.xmlef_11.1.1/xmlef.jar"/>
            <include name="org.apache.commons.beanutils_1.6.jar"/>
            <include name="org.apache.commons.digester_1.8.jar"/>
            <include name="org.apache.commons.digester_1.7.jar"/>
            <include name="org.apache.commons.logging_1.0.4.jar"/>
            <include name="org.eclipse.persistence_1.0.0.0_1-2-0.jar"/>
            <include name="oracle.coherence/coherence.jar"/>
            <include name="oracle.coherence_3.6/coherence.jar"/>
            <include name="oracle.odl_11.1.1/ojdl.jar"/>
            <include name="oracle.pki_11.1.1/oraclepki.jar"/>
         </fileset>

         <fileset dir="${java.passed.home}/lib">
            <include name="tools.jar"/>
         </fileset>

         <!-- this is a temporary location for the javax.el.ELContext dependency -->

         <pathelement location="${fmw.home}/modules/javax.jsp_1.2.0.0_2-1.jar"/>
         <pathelement location="${fmw.home}/modules/javax.jsp_1.3.0.0_2-1.jar"/>
         <pathelement location="${was.home}/plugins/javax.j2ee.jsp.jar"/>

         <fileset dir="${common.components.home}/modules">
            <include name="com.bea.core.apache.commons.lang_2.1.0.jar"/>
            <include name="com.bea.core.apache.commons.collections_3.2.0.jar"/>
            <include name="com.bea.core.xml.xmlbeans_2.0.0.0_2-5-1.jar"/>
            <include name="com.bea.core.xml.xmlbeans_2.1.0.0_2-5-1.jar"/>
            <include name="javax.management.j2ee_1.0.jar"/>
            <include name="glassfish.jaxb_1.0.0.0_2-1-9.jar"/>
            <include name="javax.xml.rpc_1.2.1.jar"/>
            <include name="javax.servlet_1.0.0.0_2-5.jar"/>
            <!-- this must be after jaxb jars in the class path -->
            <include name="oracle.xdk_11.1.0/xml.jar"/>
            <include name="oracle.jdbc_11.1.1/ojdbc6dms.jar"/>
            <include name="oracle.dms_11.1.1/dms.jar"/>
            <include name="oracle.odl_11.1.1/ojdl.jar"/>
            <include name="oracle.jps_11.1.1/jps-unsupported-api.jar"/>
            <include name="oracle.jps_11.1.1/jps-internal.jar"/>
         </fileset>
        
         <!-- common location for db2 and sql server driver -->
         <fileset dir="${common.components.home}/modules/datadirect_4.1">
            <include name="wldb2.jar"/>
            <include name="fmwgenerictoken.jar"/>
            <include name="wlsqlserver.jar"/>
         </fileset>
         <pathelement location="${wl_home}/server/lib/fmwgenerictoken.jar"/> 

         <!-- Add custom db2 JCC driver location to classpath -->
      	 <pathelement location="${db2.jcc.driver.path}/db2jcc4.jar"/>
     	 <pathelement location="${db2.jcc.driver.path}/db2jcc_license_cu.jar"/>
         <!-- Pick up db2 JCC driver from default location -->
      	 <fileset dir="${oracle.home}/..">
      	    <include name="jccDriver/db2jcc4.jar" if="default.jcc.driver.present"/>
      	    <include name="jccDriver/db2jcc_license_cu.jar" if="default.jcc.driver.present"/>
      	 </fileset>

        <!-- jars needed for uddi support -->
        <fileset dir="${oracle.home}/uddi/lib">
            <include name="core_services_client.jar" />
            <include name="security_providers_client.jar" />
            <include name="security-ng.jar" />
            <include name="security2-ng.jar" />
            <include name="taxonomy_client_v3.jar" />
            <include name="uddiclient_api_v3.jar" />
            <include name="uddiclient_core.jar" />
            <include name="wasp.jar" />
            <include name="wsdl2uddi_client_v3.jar" />
            <include name="builtin_serialization.jar" />
            <include name="jaxrpc.jar" />
            <include name="jaxm.jar" />
            <include name="saaj.jar" />  
        </fileset>

        <fileset dir="${common.components.home}/webservices">
            <include name="wsclient_extended.jar" />
        </fileset>

      </path>
      <property name="scac.tasks.class.path" refid="scac.tasks.class.path"/>
      <taskdef name="scac" classname="oracle.soa.scac.scac">
         <classpath>
            <pathelement path="${scac.tasks.class.path}"/>
         </classpath>
      </taskdef>
      <taskdef name="attachplan" classname="oracle.soa.deployplan.task.attachPlan">
         <classpath>
            <pathelement path="${scac.tasks.class.path}"/>
         </classpath>
      </taskdef>
      <taskdef name="extractplan" classname="oracle.soa.deployplan.task.extractPlan">
         <classpath>
            <pathelement path="${scac.tasks.class.path}"/>
         </classpath>
      </taskdef>
      <taskdef name="generateplan" classname="oracle.soa.deployplan.task.generatePlan">
         <classpath>
            <pathelement path="${scac.tasks.class.path}"/>
         </classpath>
      </taskdef>
      <taskdef name="validateplan" classname="oracle.soa.deployplan.task.reportPlan">
         <classpath>
            <pathelement path="${scac.tasks.class.path}"/>
         </classpath>
      </taskdef>
      <property name="config.dir" value="${oracle.home}/integration/seed/soa/configuration/"/>
      <target name="generateplanfromsar" description="Generate soa config plan from a soa archive">
         <input message="Please enter composite file:" addproperty="scac.sar"/>
         <input message="Please enter plan file:" addproperty="scac.plan"/>
         <generateplan sar="${scac.sar}" planfile="${scac.plan}" verbose="true" overwrite="${scac.overwrite}"/>
      </target>

      <target name="generateplan" description="Generate soa config plan from a composite">
         <input message="Please enter composite file:" addproperty="scac.input"/>
         <input message="Please enter plan file:" addproperty="scac.plan"/>
         <generateplan composite="${scac.input}" planfile="${scac.plan}" verbose="true" overwrite="${scac.overwrite}"/>
      </target>
      <target name="attachplan" description="Attach a soa config plan to a soa archive">
         <input message="Please enter sar file:" addproperty="scac.sar"/>
         <input message="Please enter plan file:" addproperty="scac.plan"/>
         <attachplan planfile="${scac.plan}" sar="${scac.sar}" verbose="true" overwrite="${scac.overwrite}"/>
      </target>

      <target name="extractplan" description="Extract a soa config plan from a soa archive">
         <input message="Please enter sar file:" addproperty="scac.sar"/>
         <input message="Please enter plan file:" addproperty="scac.plan"/>
         <extractplan planfile="${scac.plan}" sar="${scac.sar}" verbose="true" overwrite="${scac.overwrite}"/>
      </target>

      <target name="validateplanfromsar" description="Validate a soa config plan for a soa archive">
         <input message="Please enter sar file:" addproperty="scac.sar"/>
         <input message="Please enter report file:" addproperty="scac.output"/>
         <input message="Please enter plan file:" addproperty="scac.plan"/>
         <validateplan sar="${scac.sar}" planfile="${scac.plan}" reportfile="${scac.output}" verbose="true" overwrite="${scac.overwrite}"/>
      </target>

      <target name="validateplan" description="Validate a soa config plan for a composite">
         <input message="Please enter composite:" addproperty="scac.input"/>
         <input message="Please enter report file:" addproperty="scac.output"/>
         <input message="Please enter plan file:" addproperty="scac.plan"/>
         <validateplan composite="${scac.input}" planfile="${scac.plan}" reportfile="${scac.output}" verbose="true" overwrite="${scac.overwrite}"/>
      </target>
      <!-- 
    properties
        output
        input
        outXml: Logs the output in xml format in this file.
        displayLevel (default 1) 0:Error, 1:Warnings, 2:Info
    -->
    <target name="scac" description="Compile and validate a composite">
      <scac input="${scac.input}" outXml="${scac.output}" error="${scac.error}" appHome="${scac.application.home}" failonerror="true" displayLevel="${scac.displayLevel}">
        <jvmarg value="-Xms128m"/>
        <jvmarg value="-Xmx1024m"/>
        <jvmarg value="-XX:PermSize=32m"/>
        <jvmarg value="-XX:MaxPermSize=256m"/>
        <!-- jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/ -->
      </scac>
    </target>    
    <target name="help" description="Help">
       <echo message=" " >
       
Usage: ant -f ${ant.file} [-D...]
where 
   -Dscac.input      composite.xml file (default ${scac.input})
   -Dscac.output     output location    (default ${scac.output}) 
   -Dscac.error      error location     (default ${scac.error})
   -Dscac.overwrite  true/false         (default ${scac.overwrite})
       </echo>
    </target>
   </project>

